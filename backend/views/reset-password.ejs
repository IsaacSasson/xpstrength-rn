<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <title>Reset Your Password</title>
    <script src="https://cdn.tailwindcss.com"></script>
  </head>

  <body class="bg-gray-100 min-h-screen flex items-center justify-center">
    <div class="w-full max-w-md">
      <!-- Form Container -->
      <div id="formContainer" class="bg-white shadow-lg rounded-lg p-8">
        <h1 class="text-2xl font-semibold mb-6 text-center">
          Choose a New Password
        </h1>

        <form id="resetForm" class="space-y-4">
          <div>
            <label class="block text-gray-700 mb-1">New password</label>
            <input
              type="password"
              id="newPassword"
              required
              minlength="8"
              class="w-full px-3 py-2 border rounded focus:outline-none focus:ring-2 focus:ring-blue-500"
            />
          </div>

          <div>
            <label class="block text-gray-700 mb-1">Confirm password</label>
            <input
              type="password"
              id="confirmPassword"
              required
              class="w-full px-3 py-2 border rounded focus:outline-none focus:ring-2 focus:ring-blue-500"
            />
          </div>

          <!-- server-injected token -->
          <input type="hidden" id="resetToken" value="<%= resetToken %>" />

          <button
            type="submit"
            class="w-full bg-blue-600 hover:bg-blue-700 text-white font-semibold py-2 rounded transition"
          >
            Reset password
          </button>
        </form>

        <p id="message" class="mt-4 text-center text-sm"></p>
      </div>

      <!-- Success Container -->
      <div
        id="successContainer"
        class="hidden bg-white shadow-lg rounded-lg p-8 flex items-center justify-center h-48"
      >
        <p
          id="successMessage"
          class="text-green-600 text-3xl font-bold text-center"
        ></p>
      </div>
    </div>

    <script>
      (function () {
        const form = document.getElementById("resetForm");
        const msg = document.getElementById("message");
        const formContainer = document.getElementById("formContainer");
        const successContainer = document.getElementById("successContainer");
        const successMessage = document.getElementById("successMessage");

        form.addEventListener("submit", async (e) => {
          e.preventDefault();
          msg.textContent = "";
          msg.className = "mt-4 text-center text-sm";

          const pw = document.getElementById("newPassword").value;
          const cpw = document.getElementById("confirmPassword").value;
          if (pw !== cpw) {
            msg.textContent = "Passwords do not match.";
            msg.classList.add("text-red-500");
            return;
          }

          const token = document.getElementById("resetToken").value;
          const url = "/api/v1/auth/resetPassword";

          try {
            const res = await fetch(url, {
              method: "PATCH",
              headers: { "Content-Type": "application/json" },
              body: JSON.stringify({
                data: { resetToken: token, newPassword: pw },
              }),
            });

            if (!res.ok) {
              let errData = {};
              try {
                errData = await res.json();
              } catch {}
              let displayMsg = errData.message || res.statusText;

              switch (errData.code) {
                case "VALIDATION":
                  displayMsg = errData.error;
                  break;
                case "DUPLICATE":
                  displayMsg = "That password is already in use.";
                  break;
                case "BAD_REFERENCE":
                  displayMsg = "Invalid link—please request a new one.";
                  break;
                case "DB_DOWN":
                  displayMsg = "Service unavailable—please try again later.";
                  break;
              }

              if (res.status === 403) {
                displayMsg =
                  "Invalid or expired reset link-please request a new one.";
              }

              msg.textContent = displayMsg;
              msg.classList.add("text-red-500");
              return;
            }

            // success: hide form, show success message
            const body = await res.json();
            formContainer.classList.add("hidden");
            successMessage.textContent = "Password sucessfully changed!";
            successContainer.classList.remove("hidden");
          } catch (err) {
            msg.textContent = err.message;
            msg.classList.add("text-red-500");
          }
        });
      })();
    </script>
  </body>
</html>
